syntax enable
set nowrap
set number
" set t_Co=256
set background=dark
set ruler
set smarttab
set tabstop=4
set softtabstop=4
set autoindent
set smartindent
set expandtab
set smartcase
set wildmenu
set ignorecase
set hlsearch
set shiftwidth=4
set background=dark
if (has("termguicolors"))
  set termguicolors
endif
colorscheme OceanicNext
let g:oceanic_next_terminal_bold = 1
let g:oceanic_next_terminal_italic = 1
"colorscheme hybrid_material
filetype plugin indent on

set noshowmode
inoremap " ""<left>
inoremap ' ''<left>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O

set encoding=utf8
call plug#begin('~/.vim/plugged')

Plug 'ervandew/supertab'
Plug 'mengelbrecht/lightline-bufferline'
Plug 'itchyny/lightline.vim'
Plug 'tmhedberg/SimpylFold'
Plug 'ryanoasis/vim-devicons'
Plug 'airblade/vim-gitgutter'
Plug 'thaerkh/vim-indentguides'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'kshenoy/vim-signature'

call plug#end()

set updatetime=100
set listchars=""
let g:indentguides_tabchar = '|'
let g:indentguides_spacechar = '|'

let g:lightline = {
    \ 'colorscheme': 'one',
    \ }

map fd :bn<cr>
map df :bp<cr>

let g:lightline.tabline          = {'left': [['buffers']], 'right': [['close']]}
let g:lightline.component_expand = {'buffers': 'lightline#bufferline#buffers'}
let g:lightline.component_type   = {'buffers': 'tabsel'}
set showtabline=2
set laststatus=2
let g:lightline#bufferline#shorten_path = 1

let g:SimpylFold_docstring_preview = 1
let g:SimpylFold_fold_docstring = 0
let g:SimpylFold_fold_import = 0
set fdls=99

"let g:airline_symbols = get(g:,'airline_symbols',{})
"let g:airline_symbols.whitespace=' '
"let g:Powerline_symbols = 'unicode'
"let g:airline_powerline_fonts = 1
"let g:airline#extensions#tabline#enabled = 1
"let g:airline_theme='light'
"let g:airline#extensions#tabline#fnamemod = ':t'
"let g:airline_skip_empty_sections = 0
"let g:airline_section_z = airline#section#create(['linenr', ':%3v'])
" if !exists('g:airline_symbols')
"   let g:airline_symbols = {}
" endif

"" unicode symbols
"let g:airline_left_sep = '»'
"let g:airline_left_sep = '▶'
"let g:airline_right_sep = '«'
"let g:airline_right_sep = '◀'
"let g:airline_symbols.crypt = '🔒'
"let g:airline_symbols.linenr = '☰'
"let g:airline_symbols.linenr = '␊'
"let g:airline_symbols.linenr = '␤'
"let g:airline_symbols.linenr = '¶'
"let g:airline_symbols.maxlinenr = ''
"let g:airline_symbols.maxlinenr = '㏑'
"let g:airline_symbols.branch = '⎇'
"let g:airline_symbols.paste = 'ρ'
"let g:airline_symbols.paste = 'Þ'
"let g:airline_symbols.paste = '∥'
"let g:airline_symbols.spell = 'Ꞩ'
"let g:airline_symbols.notexists = 'Ɇ'
"let g:airline_symbols.whitespace = 'Ξ'
"
"" powerline symbols
"let g:airline_left_sep = ''
"let g:airline_left_alt_sep = ''
"let g:airline_right_sep = ''
"let g:airline_right_alt_sep = ''
"let g:airline_symbols.branch = ''
"let g:airline_symbols.readonly = ''
"let g:airline_symbols.linenr = ''
"let g:airline_symbols.maxlinenr = ' '
"let g:airline_symbols.dirty=''
